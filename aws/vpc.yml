---
- name: AWS VPC Automation Playbook
  hosts: localhost
  gather_facts: false

  vars_files:
  - info.yml

  tasks:
    - name: Create VPC
      ec2_vpc_net:
        aws_access_key: "{{ aws_id }}"
        aws_secret_key: "{{ aws_key }}"
        region: "{{ aws_region }}"
        name: vpc_test
        cidr_block: 10.0.0.0/24
        tags:
          module: ec2_vpc_net
        tenancy: default
      register: ansibleVPC

    - name: Display the AnsibleVCP output
      debug:
        var: ansibleVPC
    

    - name: Create subnet
      ec2_vcp_subnet:
        aws_access_key: "{{ aws_id }}"
        aws_secret_key: "{{ aws_key }}"
        region: "{{ aws_region }}"
        state: present
        cidr: 10.0.0.0/24
        vcp_id: "{{ ansibleVCP.vcp.id }}"
        map_public: yes
        tags:
          name: public_subnet
      register: public_subnet

    - name: Display the public subnet output
      debug:
        var: public_subnet


    - name: Create an internet gateway
      ec2_vcp_igw:
        aws_access_key: "{{ aws_id }}"
        aws_secret_key: "{{ aws_key }}"
        region: "{{ aws_region }}"
        state: present
        vcp_id: "{{ ansibleVCP.vcp.id }}"
        tags:
          name: ansibleVPC_IGW
      register: ansibleVPC_IGW

    - name: Display the ansibleVPC_IGW output
      debug:
        var: ansibleVPC_IGW

    - name: Create a route table
      ec2_vpc_route_table:
        aws_access_key: "{{ aws_id }}"
        aws_secret_key: "{{ aws_key }}"
        region: "{{ aws_region }}"
        state: present
        vcp_id: "{{ ansibleVCP.vcp.id }}"
        tags:
          name: rt_ansibleVPC_PublicSubnet
        subnets:
          - "{{ public_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0
            gateway_id: "{{ ansibleVCP_IGW.gateway.id }}"
      register: rt_ansibleVPC_PublicSubnet

    - name: Display the rt_ansibleVPC_PublicSubnet output
      debug:
        var: rt_ansibleVPC_PublicSubnet
          

    - name: Create a security group
      ec2_group:
        aws_access_key: "{{ aws_id }}"
        aws_secret_key: "{{ aws_key }}"
        region: "{{ aws_region }}"
        name: "sec group"
        description: "Test sec group"
        vpc_id: "{{ ansibleVCP.vcp.id }}"
        tags:
          Name: Security group
        rules:
          - proto: "tcp"
            ports: "22"
            cidr_ip: 0.0.0.0/0
      register: my_vpc_sg

    - name: display my_vpc_sg output
      debug:
        var: my_vpc_sg
        